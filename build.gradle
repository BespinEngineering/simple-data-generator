plugins {
    id 'java'
}
group 'com.pahlsoft.examples.simpledata'

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
}

//create a single Jar with all dependencies
tasks.register('fatJar', Jar) {

    duplicatesStrategy = 'include'
    archiveClassifier = 'fatJar'
    archiveBaseName = project.name
    manifest {
        attributes 'Implementation-Title': 'Simple Load Generator',
                'Implementation-Version': 1.0,
                'Main-Class': 'com.pahlsoft.simpledata.runner.EngineRunner'
    }

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:elasticsearch:1.19.3', 'org.junit.jupiter:junit-jupiter-api:5.10.0', 'org.junit.jupiter:junit-jupiter-engine:5.10.0:'
            implementation 'co.elastic.clients:elasticsearch-java:8.11.3', 'org.json:org.json:chargebee-1.0',
            'com.fasterxml.jackson.core:jackson-databind:2.14.0',
            'org.slf4j:slf4j-api:2.0.5', 'ch.qos.logback:logback-classic:1.4.12', 'ch.qos.logback:logback-core:1.4.12',
            'org.apache.logging.log4j:log4j-core:2.19.0',
            'org.yaml:snakeyaml:2.2', 'net.datafaker:datafaker:2.0.1'
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}

clean {
    delete 'out', 'build', 'transaction-engine.log', 'scripts/transaction-engine.log'
}
